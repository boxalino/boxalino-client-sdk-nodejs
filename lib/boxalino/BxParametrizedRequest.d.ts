import { BxRequest } from './BxRequest';
export declare class BxParametrizedRequest extends BxRequest {
    private bxReturnFields;
    private getItemFieldsCB;
    private requestParametersPrefix;
    private requestWeightedParametersPrefix;
    private requestFiltersPrefix;
    private requestFacetsPrefix;
    private requestSortFieldPrefix;
    private requestReturnFieldsName;
    private requestContextItemFieldName;
    private requestContextItemFieldValues;
    private callBackCache;
    protected requestParameterExclusionPatterns: any[];
    constructor(language: string, choiceId: string, max?: number, min?: number, bxReturnFields?: any, getItemFieldsCB?: any);
    setRequestParametersPrefix(requestParametersPrefix: string): void;
    getRequestParametersPrefix(): string;
    setRequestWeightedParametersPrefix(requestWeightedParametersPrefix: string): void;
    getRequestWeightedParametersPrefix(): string;
    setRequestFiltersPrefix(requestFiltersPrefix: string): void;
    getRequestFiltersPrefix(): string;
    setRequestFacetsPrefix(requestFacetsPrefix: string): void;
    getRequestFacetsPrefix(): string;
    setRequestSortFieldPrefix(requestSortFieldPrefix: string): void;
    getRequestSortFieldPrefix(): string;
    setRequestReturnFieldsName(requestReturnFieldsName: string): void;
    getRequestReturnFieldsName(): string;
    setRequestContextItemFieldName(requestContextItemFieldName: string): void;
    getRequestContextItemFieldName(): string;
    setRequestContextItemFieldValues(requestContextItemFieldValues: string): void;
    getRequestContextItemFieldValues(): string;
    getPrefixes(): string[];
    matchesPrefix(string: string, prefix: string, checkOtherPrefixes?: boolean): boolean;
    getPrefixedParameters(prefix: string, checkOtherPrefixes?: boolean): any;
    getContextItems(): any;
    getRequestParameterExclusionPatterns(): any[];
    addRequestParameterExclusionPatterns(pattern: string): void;
    getRequestContextParameters(): any;
    getWeightedParameters(): any;
    getFilters(): any;
    getFacets(): any;
    getSortFields(): any;
    getReturnFields(): any;
    array_unique(value: string, index: number, self: any): boolean;
    getAllReturnFields(): any;
    retrieveFromCallBack(items: any, fields: any): any;
    retrieveHitFieldValues(item: any, field: any, items: any, fields: any): any;
    private unset;
}
