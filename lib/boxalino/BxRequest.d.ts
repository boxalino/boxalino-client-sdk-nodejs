export declare class BxRequest {
    protected language: string;
    protected groupBy: string;
    protected choiceId: string;
    protected min: any;
    protected max: any;
    protected withRelaxation: any;
    protected indexId: any;
    protected requestMap: any;
    protected returnFields: any;
    protected offset: any;
    protected queryText: any;
    protected bxFacets: any;
    protected bxSortFields: any;
    protected bxFilters: any;
    protected orFilters: any;
    protected hitsGroupsAsHits: any;
    protected groupFacets: any;
    protected requestContextParameters: any;
    constructor(language: string, choiceId: string, max?: any, min?: any);
    getWithRelaxation(): any;
    setWithRelaxation(withRelaxation: any): void;
    getReturnFields(): any;
    setReturnFields(returnFields: any): void;
    getOffset(): any;
    setOffset(offset: any): void;
    getQuerytext(): any;
    setQuerytext(queryText: any): void;
    getFacets(): any;
    setFacets(bxFacets: any): void;
    getSortFields(): any;
    setSortFields(bxSortFields: any): void;
    getFilters(): any;
    setFilters(bxFilters: any): void;
    addFilter(bxFilter: any): void;
    getOrFilters(): any;
    setOrFilters(orFilters: any): void;
    addSortField(field: any, reverse?: any): void;
    getChoiceId(): string;
    setChoiceId(choiceId: any): void;
    getMax(): any;
    setMax(max: any): void;
    getMin(): any;
    setMin(min: any): void;
    getIndexId(): any;
    setIndexId(indexId: any): void;
    setDefaultIndexId(indexId: any): void;
    setDefaultRequestMap(requestMap: any): void;
    getLanguage(): string;
    setLanguage(language: any): void;
    getGroupBy(): string;
    setGroupBy(groupBy: any): void;
    setHitsGroupsAsHits(groupsAsHits: any): void;
    setGroupFacets(groupFacets: any): void;
    getSimpleSearchQuery(): any;
    protected contextItems: any[];
    setProductContext(fieldName: any, contextItemId: any, role?: any, relatedProducts?: any, relatedProductField?: any): void;
    setBasketProductWithPrices(fieldName: any, basketContent: any, role?: any, subRole?: any, relatedProducts?: any, relatedProductField?: any): void;
    addRelatedProducts(relatedProducts: any, relatedProductField?: any): void;
    getContextItems(): any[];
    getRequestContextParameters(): any;
    retrieveHitFieldValues(item: any, field: any, items: any, fields: any): any[];
}
