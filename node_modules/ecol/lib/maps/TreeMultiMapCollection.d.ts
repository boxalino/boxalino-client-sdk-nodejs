import { TreeMultiMap } from "tstl/container/TreeMultiMap";
import { Entry } from "tstl/utility/Entry";
import { ICollection } from "../basic/ICollection";
import { CollectionEvent } from "../basic/CollectionEvent";
import "./internal";
export declare class TreeMultiMapCollection<Key, T> extends TreeMultiMap<Key, T> implements ICollection<Entry<Key, T>, TreeMultiMap<Key, T>, TreeMultiMap.Iterator<Key, T>, TreeMultiMap.ReverseIterator<Key, T>> {
    /**
     * @hidden
     */
    private dispatcher_;
    clear(): void;
    /**
     * @hidden
     */
    protected _Handle_insert(first: TreeMultiMap.Iterator<Key, T>, last: TreeMultiMap.Iterator<Key, T>): void;
    /**
     * @hidden
     */
    protected _Handle_erase(first: TreeMultiMap.Iterator<Key, T>, last: TreeMultiMap.Iterator<Key, T>): void;
    /**
     * @inheritDoc
     */
    dispatchEvent(event: TreeMultiMapCollection.Event<Key, T>): void;
    /**
     * @inheritDoc
     */
    refresh(): void;
    /**
     * @inheritDoc
     */
    refresh(it: TreeMultiMap.Iterator<Key, T>): void;
    /**
     * @inheritDoc
     */
    refresh(first: TreeMultiMap.Iterator<Key, T>, last: TreeMultiMap.Iterator<Key, T>): void;
    /**
     * @inheritDoc
     */
    hasEventListener(type: CollectionEvent.Type): boolean;
    /**
     * @inheritDoc
     */
    addEventListener(type: CollectionEvent.Type, listener: TreeMultiMapCollection.Listener<Key, T>): void;
    /**
     * @inheritDoc
     */
    removeEventListener(type: CollectionEvent.Type, listener: TreeMultiMapCollection.Listener<Key, T>): void;
}
export declare namespace TreeMultiMapCollection {
    type Event<Key, T> = CollectionEvent<Entry<Key, T>, TreeMultiMap<Key, T>, TreeMultiMap.Iterator<Key, T>, TreeMultiMap.ReverseIterator<Key, T>>;
    type Listener<Key, T> = CollectionEvent.Listener<Entry<Key, T>, TreeMultiMap<Key, T>, TreeMultiMap.Iterator<Key, T>, TreeMultiMap.ReverseIterator<Key, T>>;
    const Event: typeof CollectionEvent;
    export import Iterator = TreeMultiMap.Iterator;
    export import ReverseIterator = TreeMultiMap.ReverseIterator;
}
//# sourceMappingURL=TreeMultiMapCollection.d.ts.map