"use strict";
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var std = require("tstl");
var ecol = require("../index");
function test_swaps() {
    var x = new std.List();
    var y = new ecol.ListCollection();
    var sum = 0;
    y.addEventListener("refresh", function (event) {
        var e_1, _a;
        try {
            for (var event_1 = __values(event), event_1_1 = event_1.next(); !event_1_1.done; event_1_1 = event_1.next()) {
                var elem = event_1_1.value;
                sum += elem;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (event_1_1 && !event_1_1.done && (_a = event_1.return)) _a.call(event_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    });
    for (var i = 1; i <= 3; ++i) {
        x.push_back(i);
        y.push_back(i + 3);
    }
    x.swap(y);
    y.swap(x);
    if (sum !== 6 * 7 / 2)
        throw new std.DomainError("Error on collection.swap().");
}
exports.test_swaps = test_swaps;
//# sourceMappingURL=swaps.js.map