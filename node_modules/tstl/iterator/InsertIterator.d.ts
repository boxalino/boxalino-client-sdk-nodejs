import { _InsertIterator } from "../base/iterator/_InsertIterator";
import { _IInsert } from "../base/disposable/IPartialContainers";
import { IForwardIterator } from "./IForwardIterator";
/**
 * Insert iterator.
 *
 * @author Jeongho Nam <http://samchon.org>
 */
export declare class InsertIterator<T, Container extends _IInsert<T, Iterator>, Iterator extends IForwardIterator<T, Iterator>> extends _InsertIterator<T, InsertIterator<T, Container, Iterator>> {
    /**
     * @hidden
     */
    private container_;
    /**
     * @hidden
     */
    private it_;
    /**
     * Initializer Constructor.
     *
     * @param container Target container to insert.
     * @param it Iterator to the position to insert.
     */
    constructor(container: Container, it: Iterator);
    /**
     * @inheritDoc
     */
    value: T;
    /**
     * @inheritDoc
     */
    equals(obj: InsertIterator<T, Container, Iterator>): boolean;
}
//# sourceMappingURL=InsertIterator.d.ts.map