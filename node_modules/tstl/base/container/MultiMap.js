"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MapContainer_1 = require("./MapContainer");
/**
 * Base class for Multiple-key Map Containers.
 *
 * @author Jeongho Nam <http://samchon.org>
 */
var MultiMap = /** @class */ (function (_super) {
    __extends(MultiMap, _super);
    function MultiMap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MultiMap.prototype.insert = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return _super.prototype.insert.apply(this, args);
    };
    /**
     * @hidden
     */
    MultiMap.prototype._Erase_by_key = function (key) {
        var first = this.find(key);
        if (first.equals(this.end()) === true)
            return 0;
        var last = first.next();
        var ret = 1;
        while (!last.equals(this.end()) && this._Key_eq(key, last.first)) {
            last = last.next();
            ++ret;
        }
        this._Erase_by_range(first, last);
        return ret;
    };
    /* ---------------------------------------------------------
        UTILITY
    --------------------------------------------------------- */
    /**
     * @inheritDoc
     */
    MultiMap.prototype.merge = function (source) {
        this.insert(source.begin(), source.end());
        source.clear();
    };
    return MultiMap;
}(MapContainer_1.MapContainer));
exports.MultiMap = MultiMap;
//# sourceMappingURL=MultiMap.js.map