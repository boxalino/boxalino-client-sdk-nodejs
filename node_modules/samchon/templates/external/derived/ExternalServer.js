"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ExternalSystem_1 = require("../ExternalSystem");
/**
 * An external server driver.
 *
 * The {@link ExternalServer} is an abstract class, derived from the {@link ExternalSystem} class, connecting to
 * remote, external server. Extends this {@link ExternalServer} class and overrides the
 * {@link createServerConnector createServerConnector()} method following which protocol the external server uses.
 *
 * #### [Inherited] {@link ExternalSystem}
 * @copydoc ExternalSystem
 */
var ExternalServer = /** @class */ (function (_super) {
    __extends(ExternalServer, _super);
    /* ---------------------------------------------------------
        CONSTRUCTORS
    --------------------------------------------------------- */
    /**
     * Construct from parent {@link ExternalSystemArray}.
     *
     * @param systemArray The parent {@link ExternalSystemArray} object.
     */
    function ExternalServer(systemArray) {
        var _this = _super.call(this, systemArray) || this;
        _this.ip = "";
        _this.port = 0;
        return _this;
    }
    /* ---------------------------------------------------------
        PROCEDURES
    --------------------------------------------------------- */
    /**
     * @inheritdoc
     */
    ExternalServer.prototype.connect = function () {
        this.communicator = this.createServerConnector();
        this.communicator.connect(this.ip, this.port);
    };
    return ExternalServer;
}(ExternalSystem_1.ExternalSystem));
exports.ExternalServer = ExternalServer;
//# sourceMappingURL=ExternalServer.js.map