import { SlaveSystem } from "./SlaveSystem";
import { IServer } from "../../protocol/server/IServer";
import { IClientDriver } from "../../protocol/communicator/IClientDriver";
export interface ISlaveServer extends SlaveSystem, IServer {
}
export declare abstract class SlaveServer extends SlaveSystem implements ISlaveServer {
    /**
     * @hidden
     */
    private server_base_;
    /**
     * Default Constructor.
     */
    constructor();
    /**
     * @inheritdoc
     */
    protected abstract createServerBase(): IServer;
    /**
     * @inheritdoc
     */
    open(port: number): void;
    /**
     * @inheritdoc
     */
    close(): void;
    /**
     * @inheritdoc
     */
    addClient(driver: IClientDriver): void;
}
