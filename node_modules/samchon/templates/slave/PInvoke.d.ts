import { Invoke } from "../../protocol/invoke/Invoke";
import { SlaveSystem } from "./SlaveSystem";
import { InvokeHistory } from "./InvokeHistory";
/**
 * An {@link Invoke} message which represents a **process**.
 *
 *
 *
 * #### [Inherited] {@link Invoke}
 * @copydoc Invoke
 */
export declare class PInvoke extends Invoke {
    /**
     * @hidden
     */
    private history_;
    /**
     * @hidden
     */
    private slave_system_;
    /**
     * @hidden
     */
    private hold_;
    /**
     * Initializer Constructor.
     *
     * @param invoke Original {@link Invoke} message.
     * @param history {@link InvokeHistory} object archiving execution time.
     * @param slaveSystem Related {@link SlaveSystem} object who gets those processes from its master.
     */
    constructor(invoke: Invoke, history: InvokeHistory, slaveSystem: SlaveSystem);
    /**
     * Get history object.
     *
     * Get {@link InvokeHistory} object who is archiving execution time of this process.
     */
    getHistory(): InvokeHistory;
    /**
     * Is the reporting hold?
     */
    isHold(): boolean;
    /**
     * Hold reporting completion to master.
     */
    hold(): void;
    /**
     * Report completion.
     */
    complete(): void;
}
