import { IProtocol } from "../../protocol/invoke/IProtocol";
import { ICommunicator } from "../../protocol/communicator/ICommunicator";
import { Invoke } from "../../protocol/invoke/Invoke";
/**
 * A slave system.
 *
 * @author Jeongho Nam <http://samchon.org>
 */
export declare abstract class SlaveSystem implements IProtocol {
    /**
     * @hidden
     */
    protected communicator_: ICommunicator;
    /**
     * Default Constructor.
     */
    constructor();
    sendData(invoke: Invoke): void;
    abstract replyData(invoke: Invoke): void | Promise<void>;
    /**
     * @hidden
     */
    protected _Reply_data(invoke: Invoke): void;
    private _Complete_process;
}
