"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var SlaveSystem_1 = require("./SlaveSystem");
var SlaveServer = /** @class */ (function (_super) {
    __extends(SlaveServer, _super);
    /* =========================================================
        CONSTRUCTORS
            - MEMBER
            - FACTORY METHOD FOR CHILDREN
    ============================================================
        MEMBER
    --------------------------------------------------------- */
    /**
     * Default Constructor.
     */
    function SlaveServer() {
        var _this = _super.call(this) || this;
        _this.server_base_ = null;
        return _this;
    }
    /* ---------------------------------------------------------
        SERVER's METHOD
    --------------------------------------------------------- */
    /**
     * @inheritdoc
     */
    SlaveServer.prototype.open = function (port) {
        this.server_base_ = this.createServerBase();
        if (this.server_base_ == null)
            return;
        this.server_base_.open(port);
    };
    /**
     * @inheritdoc
     */
    SlaveServer.prototype.close = function () {
        if (this.server_base_ != null)
            this.server_base_.close();
    };
    /* ---------------------------------------------------------
        OVERRIDINGS
    --------------------------------------------------------- */
    /**
     * @inheritdoc
     */
    SlaveServer.prototype.addClient = function (driver) {
        this.communicator_ = driver;
        driver.listen(this);
    };
    return SlaveServer;
}(SlaveSystem_1.SlaveSystem));
exports.SlaveServer = SlaveServer;
//# sourceMappingURL=SlaveServer.js.map