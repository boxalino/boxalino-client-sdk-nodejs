"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var net = require("net");
var ClientDriver_1 = require("../communicator/client_driver/ClientDriver");
/**
 * A server.
 *
 * The {@link Server} is an abstract class designed to open a server and accept clients who are following Samchon
 * Framework's own protocol. Extends this {@link Server} class and overrides {@link addClient addClient()} method to
 * define what to do with newly connected {@link ClientDriver remote clients}.
 *
 * #### [Inherited] {@link IServer}
 * @copydoc Server
 */
var Server = /** @class */ (function () {
    function Server() {
        /**
         * @hidden
         */
        this.net_driver_ = null;
    }
    /* -------------------------------------------------------------------
        PROCEDURES
    ------------------------------------------------------------------- */
    /**
     * @inheritdoc
     */
    Server.prototype.open = function (port) {
        this.net_driver_ = net.createServer(this._Handle_connect.bind(this));
        this.net_driver_.listen(port);
    };
    /**
     * @inheritdoc
     */
    Server.prototype.close = function () {
        this.net_driver_.close();
        this.net_driver_ = null;
    };
    /**
     * @hidden
     */
    Server.prototype._Handle_connect = function (socket) {
        var clientDriver = new ClientDriver_1.ClientDriver(socket);
        this.addClient(clientDriver);
    };
    return Server;
}());
exports.Server = Server;
//# sourceMappingURL=Server.js.map