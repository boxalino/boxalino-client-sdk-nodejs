"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var SharedWorkerServer_1 = require("../SharedWorkerServer");
/**
 * A substitute {@link SharedWorkerServer}.
 *
 * The {@link SharedWorkerServerBase} is a substitute class who subrogates {@link SharedWorkerServer}'s
 * responsibility.
 *
 * #### [Inherited] {@link IServerBase}
 * @copydoc IServerBase
 */
var SharedWorkerServerBase = /** @class */ (function (_super) {
    __extends(SharedWorkerServerBase, _super);
    /* -------------------------------------------------------------------
        CONSTRUCTORS
    ------------------------------------------------------------------- */
    /**
     * Construct from a *hooker*.
     *
     * @param hooker A hooker throwing responsibility of server's role.
     */
    function SharedWorkerServerBase(hooker) {
        var _this = _super.call(this) || this;
        _this.hooker_ = hooker;
        return _this;
    }
    /**
     * @inheritdoc
     */
    SharedWorkerServerBase.prototype.addClient = function (driver) {
        this.hooker_.addClient(driver);
    };
    return SharedWorkerServerBase;
}(SharedWorkerServer_1.SharedWorkerServer));
exports.SharedWorkerServerBase = SharedWorkerServerBase;
//# sourceMappingURL=SharedWorkerServerBase.js.map