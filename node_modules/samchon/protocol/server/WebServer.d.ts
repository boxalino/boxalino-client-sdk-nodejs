import { IServer } from "./IServer";
import { WebClientDriver } from "../communicator/client_driver/WebClientDriver";
/**
 * A web server.
 *
 * The {@link WebServer} is an abstract class designed to open a server and accept clients who are following
 * web-socket protocol. Extends this {@link WebServer} class and overrides {@link addClient addClient()} method to
 * define what to do with newly connected {@link WebClientDriver remote clients}.
 *
 * #### [Inherited] {@link IServer}
 * @copydoc IServer
 */
export declare abstract class WebServer implements IServer {
    /**
     * @hidden
     */
    private http_server_;
    /**
     * @hidden
     */
    private sequence_;
    /**
     * @hidden
     */
    private my_port_;
    /**
     * Default Constructor.
     */
    constructor();
    /**
     * @inheritdoc
     */
    abstract addClient(driver: WebClientDriver): void;
    /**
     * @inheritdoc
     */
    open(port: number): void;
    /**
     * @inheritdoc
     */
    close(): void;
    /**
     * @hidden
     */
    private _Handle_request;
    /**
     * @hidden
     */
    private _Fetch_session_id;
    /**
     * @hidden
     */
    private _Issue_session_id;
}
