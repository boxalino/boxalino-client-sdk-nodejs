import { IServer } from "./IServer";
import { ClientDriver } from "../communicator/client_driver/ClientDriver";
/**
 * A server.
 *
 * The {@link Server} is an abstract class designed to open a server and accept clients who are following Samchon
 * Framework's own protocol. Extends this {@link Server} class and overrides {@link addClient addClient()} method to
 * define what to do with newly connected {@link ClientDriver remote clients}.
 *
 * #### [Inherited] {@link IServer}
 * @copydoc Server
 */
export declare abstract class Server implements IServer {
    /**
     * @hidden
     */
    private net_driver_;
    /**
     * @inheritdoc
     */
    abstract addClient(driver: ClientDriver): void;
    /**
     * @inheritdoc
     */
    open(port: number): void;
    /**
     * @inheritdoc
     */
    close(): void;
    /**
     * @hidden
     */
    private _Handle_connect;
}
