import { XML } from "sxml";
import { Entity } from "../entity/Entity";
/**
 * A parameter belongs to an Invoke.
 *
 * ![Class Diagram](http://samchon.github.io/framework/images/design/ts_class_diagram/protocol_message_protocol.png)
 *
 * @author Jeongho Nam <http://samchon.org>
 */
export declare class InvokeParameter extends Entity {
    /**
     * Name of the parameter.
     *
     * @details Optional property, can be omitted.
     */
    protected name: string;
    /**
     * Type of the parameter.
     */
    protected type: string;
    /**
     * Value of the parameter.
     */
    protected value: boolean | number | string | XML | Uint8Array;
    /**
     * Default Constructor.
     */
    constructor();
    constructor(val: boolean);
    constructor(val: number);
    constructor(val: string);
    constructor(val: XML);
    constructor(val: Uint8Array);
    /**
     * Construct from variable name and number value.
     *
     * @param name
     * @param val
     */
    constructor(name: string, val: boolean);
    constructor(name: string, val: number);
    constructor(name: string, val: string);
    constructor(name: string, val: XML);
    constructor(name: string, val: Uint8Array);
    /**
     * @inheritdoc
     */
    construct(xml: XML): void;
    setValue(value: boolean): void;
    setValue(value: number): void;
    setValue(value: string): void;
    setValue(value: XML): void;
    setValue(value: Uint8Array): void;
    /**
     * @inheritdoc
     */
    key(): any;
    /**
     * Get name.
     */
    getName(): string;
    /**
     * Get type.
     */
    getType(): string;
    /**
     * Get value.
     */
    getValue(): any;
    /**
     * @inheritdoc
     */
    TAG(): string;
    /**
     * @inheritdoc
     */
    toXML(): XML;
}
