import * as collections from "ecol";
import { XML } from "sxml";
import { IEntity } from "./IEntity";
/**
 * @inheritdoc
 */
export declare abstract class EntityArrayCollection<T extends IEntity> extends collections.ArrayCollection<T> {
    /**
     * @inheritdoc
     */
    construct(xml: XML): void;
    /**
     * @inheritdoc
     */
    abstract createChild(xml: XML): T;
    /**
     * @inheritdoc
     */
    key(): any;
    /**
     * @inheritdoc
     */
    has(key: any): boolean;
    /**
     * @inheritdoc
     */
    count(key: any): number;
    /**
     * @inheritdoc
     */
    get(key: any): T;
    /**
     * @inheritdoc
     */
    abstract TAG(): string;
    /**
     * @inheritdoc
     */
    abstract CHILD_TAG(): string;
    /**
     * @inheritdoc
     */
    toXML(): XML;
}
/**
 * @inheritdoc
 */
export declare abstract class EntityListCollection<T extends IEntity> extends collections.ListCollection<T> {
    /**
     * @inheritdoc
     */
    construct(xml: XML): void;
    /**
     * @inheritdoc
     */
    abstract createChild(xml: XML): T;
    /**
     * @inheritdoc
     */
    key(): any;
    /**
     * @inheritdoc
     */
    has(key: any): boolean;
    /**
     * @inheritdoc
     */
    count(key: any): number;
    /**
     * @inheritdoc
     */
    get(key: any): T;
    /**
     * @inheritdoc
     */
    abstract TAG(): string;
    /**
     * @inheritdoc
     */
    abstract CHILD_TAG(): string;
    /**
     * @inheritdoc
     */
    toXML(): XML;
}
/**
 * @inheritdoc
 */
export declare abstract class EntityDequeCollection<T extends IEntity> extends collections.DequeCollection<T> {
    /**
     * @inheritdoc
     */
    construct(xml: XML): void;
    /**
     * @inheritdoc
     */
    abstract createChild(xml: XML): T;
    /**
     * @inheritdoc
     */
    key(): any;
    /**
     * @inheritdoc
     */
    has(key: any): boolean;
    /**
     * @inheritdoc
     */
    count(key: any): number;
    /**
     * @inheritdoc
     */
    get(key: any): T;
    /**
     * @inheritdoc
     */
    abstract TAG(): string;
    /**
     * @inheritdoc
     */
    abstract CHILD_TAG(): string;
    /**
     * @inheritdoc
     */
    toXML(): XML;
}
