import { _CommunicatorBase } from "./_CommunicatorBase";
import { Invoke } from "../../invoke/Invoke";
/**
 * A communicator following Web-socket protocol.
 *
 * {@link WebCommunicator} is an abstract class following Web-socket protocol. This {@link WebCommunicator} class is
 * specified to {@link WebServerConnector} and {@link WebClientDriver} whether the remote system is a server (that my
 * system is connecting to) or a client (a client conneting to to my server).
 *
 * Note that, one of this or remote system is web-browser based, then there's not any alternative choice. Web browser
 * supports only Web-socket protocol. In that case, you've use this {@link WebCommunicator} class.
 *
 * #### [Inherited] {@link ICommunicator}
 * @copydoc ICommunicator
 */
export declare abstract class WebCommunicator extends _CommunicatorBase {
    /**
     * @hidden
     */
    private connection_;
    /**
     * @inheritdoc
     */
    close(): void;
    /**
     * @inheritdoc
     */
    sendData(invoke: Invoke): void;
    /**
     * @hidden
     */
    private _Handle_message;
    /**
     * @hidden
     */
    protected _Handle_close(): void;
}
