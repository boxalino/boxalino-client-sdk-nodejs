"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _CommunicatorBase_1 = require("./_CommunicatorBase");
/**
 * A communicator following Web-socket protocol.
 *
 * {@link WebCommunicator} is an abstract class following Web-socket protocol. This {@link WebCommunicator} class is
 * specified to {@link WebServerConnector} and {@link WebClientDriver} whether the remote system is a server (that my
 * system is connecting to) or a client (a client conneting to to my server).
 *
 * Note that, one of this or remote system is web-browser based, then there's not any alternative choice. Web browser
 * supports only Web-socket protocol. In that case, you've use this {@link WebCommunicator} class.
 *
 * #### [Inherited] {@link ICommunicator}
 * @copydoc ICommunicator
 */
var WebCommunicator = /** @class */ (function (_super) {
    __extends(WebCommunicator, _super);
    function WebCommunicator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // SOCKET MEMBER
        /**
         * @hidden
         */
        _this.connection_ = null;
        return _this;
    }
    /* ---------------------------------------------------------
        CONSTRUCTORS
    --------------------------------------------------------- */
    // using super.constructor
    /**
     * @inheritdoc
     */
    WebCommunicator.prototype.close = function () {
        this.connection_.close();
    };
    /* ---------------------------------------------------------
        INVOKE MESSAGE I/O
    --------------------------------------------------------- */
    /**
     * @inheritdoc
     */
    WebCommunicator.prototype.sendData = function (invoke) {
        this.connection_.sendUTF(invoke.toXML().toString());
        for (var i = 0; i < invoke.size(); i++)
            if (invoke.at(i).getType() == "ByteArray")
                this.connection_.sendBytes(invoke.at(i).getValue());
    };
    /**
     * @hidden
     */
    WebCommunicator.prototype._Handle_message = function (message) {
        // EXCEPTION HANDLING IS REQUIRED
        //	- BINARY_INVOKE EXISTS, BUT TEXT MESSAGE HAS COME
        //	- BINARY_INVOKE IS NOT, BUT BINARY MESSAGE HAS COME
        if (message.type == "utf8")
            this._Handle_string(message.utf8Data);
        else
            this._Handle_binary(message.binaryData);
    };
    /**
     * @hidden
     */
    WebCommunicator.prototype._Handle_close = function () {
        this.connected_ = false;
        if (this.onClose != null)
            this.onClose();
    };
    return WebCommunicator;
}(_CommunicatorBase_1._CommunicatorBase));
exports.WebCommunicator = WebCommunicator;
//# sourceMappingURL=WebCommunicator.js.map