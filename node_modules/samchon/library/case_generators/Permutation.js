"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A permutation case generator.
 *
 * <sub>n</sub>P<sub>r</sub>
 *
 * @author Jeongho Nam <http://samchon.org>
 */
var Permutation = /** @class */ (function () {
    /* ---------------------------------------------------------------
        CONSTRUCTORS
    --------------------------------------------------------------- */
    /**
     * Construct from size of N and R.
     *
     * @param n Size of candidates.
     * @param r Size of elements of each case.
     */
    function Permutation(n, r) {
        this.n_ = n;
        this.r_ = r;
        this.size_ = n;
        for (var i = n - 1; i > n - r; i--)
            this.size_ *= i;
    }
    /* -----------------------------------------------------------
        ACCESSORS
    ----------------------------------------------------------- */
    /**
     * @inheritdoc
     */
    Permutation.prototype.size = function () {
        return this.size_;
    };
    /**
     * Get N, number of candidates.
     */
    Permutation.prototype.n = function () {
        return this.n_;
    };
    /**
     * Get R, number of elements for each case.
     */
    Permutation.prototype.r = function () {
        return this.r_;
    };
    /* -----------------------------------------------------------
        COMPUTATION
    ----------------------------------------------------------- */
    /**
     * @inheritdoc
     */
    Permutation.prototype.at = function (index) {
        var atoms = [];
        for (var i = 0; i < this.n_; i++)
            atoms.push(i);
        var row = [];
        for (var i = 0; i < this.r_; i++) {
            var item = index % atoms.length;
            index = Math.floor(index / atoms.length);
            row.push(atoms[item]);
            atoms.splice(item, 1);
        }
        return row;
    };
    return Permutation;
}());
exports.Permutation = Permutation;
//# sourceMappingURL=Permutation.js.map